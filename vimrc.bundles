" Environment {

    " Basics {
        set nocompatible        " Must be first line
        set background=dark     " Assume a dark background
    " }

    " Function {
        function! DoRemote(arg)
          UpdateRemotePlugins
        endfunction
    " }
" }

" Bundles {

    filetype off
    call plug#begin('~/.vim/bundle')

    " Deps {
        Plug 'MarcWeber/vim-addon-mw-utils'
        Plug 'tomtom/tlib_vim'
        if executable('ag')
            Plug 'mileszs/ack.vim'
            let g:ackprg = 'ag --nogroup --nocolor --column --smart-case'
        elseif executable('ack-grep')
            let g:ackprg="ack-grep -H --nocolor --nogroup --column"
            Plug 'mileszs/ack.vim'
        elseif executable('ack')
            Plug 'mileszs/ack.vim'
        endif
    " }

    " list only the plugin groups you will use
    if !exists('g:bundle_groups')
        let g:bundle_groups = [
                              \ 'general',
                              \ 'Misc',
                              \ 'youcompleteme',
                              \ 'programming',
                              \ 'python',
                              \ 'mine',]
    endif

    " To override all the included bundles, add the following to your
    if !exists("g:override_bundles")

    " Local {
        if count(g:bundle_groups, 'mine')
            Plug 'morhetz/gruvbox'
            Plug 'rizzatti/dash.vim'
            Plug 'rust-lang/rust.vim'
        endif
    " }
    " General {
        if count(g:bundle_groups, 'general')
            Plug 'scrooloose/nerdtree'
            Plug 'altercation/vim-colors-solarized'
            Plug 'spf13/vim-colors'
            Plug 'tpope/vim-surround'
            Plug 'tpope/vim-repeat'
            Plug 'rhysd/conflict-marker.vim'
            Plug 'jiangmiao/auto-pairs'
            Plug 'ctrlpvim/ctrlp.vim'
            Plug 'tacahiroy/ctrlp-funky'
            Plug 'terryma/vim-multiple-cursors'
            Plug 'vim-scripts/sessionman.vim'
            Plug 'matchit.zip'
            Plug 'vim-airline/vim-airline'
            Plug 'vim-airline/vim-airline-themes'
            Plug 'powerline/fonts'
            Plug 'bling/vim-bufferline'
            Plug 'easymotion/vim-easymotion'
            Plug 'jistr/vim-nerdtree-tabs'
            Plug 'flazz/vim-colorschemes'
            Plug 'mbbill/undotree'
            Plug 'nathanaelkane/vim-indent-guides'
            if !exists('g:no_views')
                Plug 'vim-scripts/restore_view.vim'
            endif
            Plug 'mhinz/vim-signify'
            Plug 'tpope/vim-abolish'
            Plug 'osyo-manga/vim-over'
            Plug 'kana/vim-textobj-user'
            Plug 'kana/vim-textobj-indent'
            Plug 'gcmt/wildfire.vim'
        endif
    " }

    " Writing {
        if count(g:bundle_groups, 'writing')
            Plug 'reedes/vim-litecorrect'
            Plug 'reedes/vim-textobj-sentence'
            Plug 'reedes/vim-textobj-quote'
            Plug 'reedes/vim-wordy'
        endif
    " }

    " Programming {
        if count(g:bundle_groups, 'programming')
            Plug 'scrooloose/syntastic'
            Plug 'tpope/vim-fugitive'
            Plug 'mattn/webapi-vim'
            Plug 'mattn/gist-vim'
            Plug 'scrooloose/nerdcommenter'
            Plug 'tpope/vim-commentary'
            Plug 'godlygeek/tabular'
            if executable('ctags')
                Plug 'majutsushi/tagbar'
            endif
        endif
    " }

    " Snippets & AutoComplete {
        if  count(g:bundle_groups, 'youcompleteme')
            Plug 'Valloric/YouCompleteMe',
            Plug 'SirVer/ultisnips'
            Plug 'honza/vim-snippets'
        endif
    " }

    " Python {
        if count(g:bundle_groups, 'python')
            Plug 'klen/python-mode'
            Plug 'yssource/python.vim'
            Plug 'python_match.vim'
            Plug 'pythoncomplete'
        endif
    " }

    " Javascript {
        if count(g:bundle_groups, 'javascript')
            Plug 'elzr/vim-json'
            Plug 'groenewege/vim-less'
            Plug 'pangloss/vim-javascript'
            Plug 'briancollins/vim-jst'
            Plug 'kchmck/vim-coffee-script'
        endif
    " }

    " Scala {
        if count(g:bundle_groups, 'scala')
            Plug 'derekwyatt/vim-scala'
            Plug 'derekwyatt/vim-sbt'
            Plug 'xptemplate'
        endif
    " }

    " Haskell {
        if count(g:bundle_groups, 'haskell')
            Plug 'travitch/hasksyn'
            Plug 'dag/vim2hs'
            Plug 'Twinside/vim-haskellConceal'
            Plug 'Twinside/vim-haskellFold'
            Plug 'lukerandall/haskellmode-vim'
            Plug 'eagletmt/neco-ghc'
            Plug 'eagletmt/ghcmod-vim'
            Plug 'Shougo/vimproc.vim'
            Plug 'adinapoli/cumino'
            Plug 'bitc/vim-hdevtools'
        endif
    " }

    " Ruby {
        if count(g:bundle_groups, 'ruby')
            Plug 'tpope/vim-rails'
            let g:rubycomplete_buffer_loading = 1
        endif
    " }

    " Puppet {
        if count(g:bundle_groups, 'puppet')
            Plug 'rodjek/vim-puppet'
        endif
    " }

    " Elixir {
        if count(g:bundle_groups, 'elixir')
            Plug 'elixir-lang/vim-elixir'
            Plug 'carlosgaldino/elixir-snippets'
            Plug 'mattreduce/vim-mix'
        endif
    " }

    " Misc {
        if count(g:bundle_groups, 'misc')
            Plug 'tpope/vim-markdown'
            Plug 'spf13/vim-preview'
            Plug 'tpope/vim-cucumber'
            Plug 'cespare/vim-toml'
            Plug 'quentindecock/vim-cucumber-align-pipes'
            Plug 'saltstack/salt-vim'
        endif
    " }

    endif

    call plug#end()
" }

